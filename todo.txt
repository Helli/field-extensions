for-prof-kemper:
+quite smooth proof of the last proposition? It can be ported to generate_field (use lemma
generate_field_min_subfield2)
-not yet ported to Subrings.subfield!
master
+"induction rule: generate_field.induct" because this gives case names
+comment in last proposition statement is still there
-a commented-out proof after the last propostion, needs cleanup via C+F "(*"

rename my subfield and my subring (and their lemmas) so that I can leave it at the top without conflict

the examples from the lecture notes are not that important

If Examples.thy gets too messy:
  maybe prove that complex_of_real etc. are epimorphisms? Then the field-property should translate
  to their image.

**Questions**

Why are the current locales (e.g. subgroup) so conservative in importing other locales? Are there
good reasons for that?

After proving an interpretation of ring:
Duplicate fact declaration "Examples.rsr.add.finprod_one" vs. "Examples.rsr.add.finprod_one"\<^here>
The above error(s) occurred while activating locale instance
rsr.add :
  Group.comm_monoid
    "\<lparr>carrier = carrier (standard_ring (range rat_of_int)), monoid.mult = (\<oplus>\<^bsub>standard_ring (range rat_of_int)\<^esub>),
        one = \<zero>\<^bsub>standard_ring (range rat_of_int)\<^esub>\<rparr>"

Can the context-command use for-clauses to rename the variables? Or maybe rewrite-clauses are for that?

How to simplify facts during interpretation or locale definition?
